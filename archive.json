{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-06-16T01:38:31.360443+00:00",
  "repo": "ietf-wg-add/draft-ietf-add-split-horizon-authority",
  "labels": [
    {
      "name": "design",
      "description": "",
      "color": "1d76db"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "editorial",
      "description": "",
      "color": "41d366"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "out of scope",
      "description": "Out of scope of the WG Charter",
      "color": "e99695"
    },
    {
      "name": "parked",
      "description": "Recorded but not being worked on",
      "color": "f9d0c4"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    }
  ],
  "issues": [],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOHbyYm845AIzc",
      "title": "General text and formatting cleanup",
      "url": "https://github.com/ietf-wg-add/draft-ietf-add-split-horizon-authority/pull/1",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Includes:\r\n* Text adjustments for grammar and clarity\r\n* Replacing \"public\" resolver with \"external\"\r\n* Changes to references and blockquotes\r\n* Made diagrams narrower",
      "createdAt": "2022-06-02T20:34:44Z",
      "updatedAt": "2022-06-08T14:32:21Z",
      "baseRepository": "ietf-wg-add/draft-ietf-add-split-horizon-authority",
      "baseRefName": "main",
      "baseRefOid": "c4057ad3971b4a6eff99648a5fa3ab307fbb6b91",
      "headRepository": "ietf-wg-add/draft-ietf-add-split-horizon-authority",
      "headRefName": "bemasc-cleanup",
      "headRefOid": "f4ec6fcd18c528c4a90c23a500eb0915ed7e4660",
      "closedAt": "2022-06-06T18:04:00Z",
      "mergedAt": "2022-06-06T18:04:00Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "b53b5e0740f227a1f5de908481e5975059c241c6"
      },
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "@tireddy2 @danwing Please review",
          "createdAt": "2022-06-02T20:35:43Z",
          "updatedAt": "2022-06-02T20:35:43Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "Changes look good to me. ",
          "createdAt": "2022-06-03T09:24:36Z",
          "updatedAt": "2022-06-03T09:24:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOHbyYm847Z3yY",
          "commit": {
            "abbreviatedOid": "c31a9fa"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-06T13:46:43Z",
          "updatedAt": "2022-06-06T13:53:00Z",
          "comments": [
            {
              "originalPosition": 297,
              "body": "I suggest replacing TLS with PKIX or refer to https://datatracker.ietf.org/doc/html/rfc8310#section-8.",
              "createdAt": "2022-06-06T13:46:43Z",
              "updatedAt": "2022-06-06T13:53:00Z"
            },
            {
              "originalPosition": 342,
              "body": "I suggest replacing TLS with PKIX or refer to https://datatracker.ietf.org/doc/html/rfc8310#section-8.",
              "createdAt": "2022-06-06T13:52:55Z",
              "updatedAt": "2022-06-06T13:53:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm847acPa",
          "commit": {
            "abbreviatedOid": "c31a9fa"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-06T15:25:28Z",
          "updatedAt": "2022-06-06T15:25:28Z",
          "comments": [
            {
              "originalPosition": 297,
              "body": "OK, added reference.",
              "createdAt": "2022-06-06T15:25:28Z",
              "updatedAt": "2022-06-06T15:25:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm847acR6",
          "commit": {
            "abbreviatedOid": "c31a9fa"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-06T15:25:34Z",
          "updatedAt": "2022-06-06T15:25:35Z",
          "comments": [
            {
              "originalPosition": 342,
              "body": "OK, added reference.",
              "createdAt": "2022-06-06T15:25:35Z",
              "updatedAt": "2022-06-06T15:25:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm847a3me",
          "commit": {
            "abbreviatedOid": "f4ec6fc"
          },
          "author": "danwing",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-06T16:53:53Z",
          "updatedAt": "2022-06-06T16:53:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHbyYm847dWCD",
          "commit": {
            "abbreviatedOid": "c31a9fa"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-07T06:08:59Z",
          "updatedAt": "2022-06-07T06:08:59Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "Replace \"validates its certificate\" with \"it will authenticate the server to its name using TLS (Section 8 of RFC8310])\" or modify this step to align with the step in other examples. ",
              "createdAt": "2022-06-07T06:08:59Z",
              "updatedAt": "2022-06-07T06:08:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm847mPEJ",
          "commit": {
            "abbreviatedOid": "c31a9fa"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-08T14:32:20Z",
          "updatedAt": "2022-06-08T14:32:21Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "OK, see https://github.com/ietf-wg-add/draft-ietf-add-split-horizon-authority/pull/3",
              "createdAt": "2022-06-08T14:32:20Z",
              "updatedAt": "2022-06-08T14:32:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOHbyYm845MCoF",
      "title": "Adjust text based on feedback on the adoption thread",
      "url": "https://github.com/ietf-wg-add/draft-ietf-add-split-horizon-authority/pull/2",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From Paul Wouters:\r\n> >    Clients SHOULD\r\n> >    apply whatever acceptance rules they would otherwise apply when using\r\n> >    this resolver (e.g. checking the AD bit, validating RRSIGs).\r\n>\r\n...\r\n> This \"SHOULD\" should therefor be a \"MUST\"\r\n\r\nFrom Michael Richardson:\r\n> The document does a really poor job of defining split-horizon DNS.",
      "createdAt": "2022-06-06T18:59:38Z",
      "updatedAt": "2022-06-14T16:30:18Z",
      "baseRepository": "ietf-wg-add/draft-ietf-add-split-horizon-authority",
      "baseRefName": "main",
      "baseRefOid": "b53b5e0740f227a1f5de908481e5975059c241c6",
      "headRepository": "ietf-wg-add/draft-ietf-add-split-horizon-authority",
      "headRefName": "bemasc-feedback",
      "headRefOid": "194b3685ec31fc922e60c33f44880abd455b8827",
      "closedAt": "2022-06-14T16:30:15Z",
      "mergedAt": "2022-06-14T16:30:15Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "0d49d104d0f289d78c975ff4ca098caedce34385"
      },
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "Do you think this is a client configuration that we should reasonably\nexpect?  It seems to me that that behavior would be quite strange, although\nit is permissible. I think it's probably clearer for our examples to\nrepresent common configurations.\n\nOn Sun, Jun 12, 2022, 6:43 AM Tirumaleswar Reddy ***@***.***>\nwrote:\n\n> ***@***.**** commented on this pull request.\n> ------------------------------\n>\n> In draft-ietf-add-split-horizon-authority.xml\n> <https://github.com/ietf-wg-add/draft-ietf-add-split-horizon-authority/pull/2#discussion_r895152018>\n> :\n>\n> > @@ -300,10 +303,16 @@\n>        possible tamperproof resolution methods are presented below.</t>\n>        <section anchor=\"validating-external\">\n>          <name>Using a Pre-configured External Resolver</name>\n> -        <t>The client sends the NS query to a pre-configured resolver that is\n> -        external to the network, over a secure transport. Clients <bcp14>SHOULD</bcp14> apply\n> -        whatever acceptance rules they would otherwise apply when using this\n> -        resolver (e.g. checking the AD bit, validating RRSIGs).</t>\n> +        <t>This method applies only if the client is already configured with\n> +        a default resolution strategy that sends queries to a resolver outside\n> +        of the network over a secure transport.  That resolution strategy is\n> +        considered \"tamperproof\" because any actor who could modify the NS\n> +        response could already modify all of the user's other DNS responses.</t>\n> +        <t>To ensure that this assumption holds, clients <bcp14>MUST NOT</bcp14>\n> +        relax the acceptance rules they would otherwise apply when using this\n> +        resolver. For example, if the client would check the AD bit or\n> +        validate RRSIGs locally when using this resolver, it must also do so\n> +        when resolving NS records for this purpose.</t>\n>\n> Do you think the below example would be useful to add ?\n>\n> Another example could be a client can do DNSSEC validation for the NS\n> query used for this purpose even if it has disabled DNSSEC validation for\n> other DNS queries.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ietf-wg-add/draft-ietf-add-split-horizon-authority/pull/2#discussion_r895152018>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABO3SOGRFF5XSO6SGRYWWDVOW5MJANCNFSM5YALCOMQ>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> <ietf-wg-add/draft-ietf-add-split-horizon-authority/pull/2/review/1003592137\n> @github.com>\n>\n",
          "createdAt": "2022-06-12T20:06:42Z",
          "updatedAt": "2022-06-12T20:06:42Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "> \r\n\r\nI see two types of DNSSEC configurations (1) DNSSEC validations disabled for certain domains (see https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/dn593632(v=ws.11) or use of negative trust anchors to disable DNSSEC validation for certain domains (2) DNSSEC disabled by default by clients like browsers  for performance reasons or to deal with validation failure due to incorrectly handling DNSSEC records by middle boxes or DNSSEC mis-configuration. For case 2, the new configuration offers better security than having to force DNSSEC for all domains and the end-user does not have to deal with DNSSEC validation failures. ",
          "createdAt": "2022-06-13T09:35:13Z",
          "updatedAt": "2022-06-13T09:35:13Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "@tireddy2 Can we discuss it separately?  This PR is for changes in response to feedback in the ADD adoption thread.  Do you approve of this PR for that purpose?\r\n\r\nPerhaps you can open a new PR if you would like to add more example text.",
          "createdAt": "2022-06-13T17:10:52Z",
          "updatedAt": "2022-06-13T17:10:52Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "> @tireddy2 Can we discuss it separately? This PR is for changes in response to feedback in the ADD adoption thread. Do you approve of this PR for that purpose?\r\n\r\nYes, changes look good to me. \r\n\r\n> \r\n> Perhaps you can open a new PR if you would like to add more example text.\r\n\r\nWorks for me. I proposed this text to address the comment from the WG on whether client implementations will enable DNSSEC to support the proposed mechanism.   ",
          "createdAt": "2022-06-14T03:51:17Z",
          "updatedAt": "2022-06-14T03:51:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOHbyYm847b99S",
          "commit": {
            "abbreviatedOid": "194b368"
          },
          "author": "danwing",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-06T20:27:31Z",
          "updatedAt": "2022-06-06T20:27:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHbyYm847dfNT",
          "commit": {
            "abbreviatedOid": "194b368"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-07T06:50:01Z",
          "updatedAt": "2022-06-07T06:50:01Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "We can add the following normative text:\r\nA DNSSEC-validating client MUST apply the same validation policy to query the NS records for this purpose as it does to other queries.  A client that does not validate DNSSEC MUST apply the same policy (if any) to query the NS records as it does to other queries.",
              "createdAt": "2022-06-07T06:50:01Z",
              "updatedAt": "2022-06-07T06:50:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm847mWX7",
          "commit": {
            "abbreviatedOid": "194b368"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-08T14:48:06Z",
          "updatedAt": "2022-06-08T14:48:06Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Why is this an improvement over the text in this PR?  To me, \"MUST NOT relax\" seems very clear, and also more precise: in principle, I don't see a problem with clients applying a stricter validation policy to the NS probe than they do to normal resolution.  Also, there are other possible acceptance rules beyond \"validate DNSSEC\" or \"never validate\", e.g. Unbound's harden-algo-downgrade.",
              "createdAt": "2022-06-08T14:48:06Z",
              "updatedAt": "2022-06-08T14:48:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm847phsD",
          "commit": {
            "abbreviatedOid": "194b368"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-09T05:34:40Z",
          "updatedAt": "2022-06-09T05:34:40Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "I see your point. If DNSSEC is disabled by browsers for performance reasons or for validation failure due to incorrectly handling DNSSEC records by middle boxes. However, in our use case, organizations deploying split-horizon have every reason to correctly handle DNSSEC records otherwise DNSSEC validation will fail and the local resolver will not be used. DNSSEC can be conditionally enabled only for NS probe. ",
              "createdAt": "2022-06-09T05:34:40Z",
              "updatedAt": "2022-06-09T05:34:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm8470ZnJ",
          "commit": {
            "abbreviatedOid": "194b368"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-12T10:43:04Z",
          "updatedAt": "2022-06-12T10:43:04Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Do you think the below example would be useful to add ?\r\n\r\nAnother example could be a client can do DNSSEC validation for the NS query used for this purpose even if it has disabled DNSSEC validation for other DNS queries.",
              "createdAt": "2022-06-12T10:43:04Z",
              "updatedAt": "2022-06-12T10:43:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHbyYm8476gVb",
          "commit": {
            "abbreviatedOid": "194b368"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-14T03:51:58Z",
          "updatedAt": "2022-06-14T03:51:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOHbyYm845U0Pu",
      "title": "Use parallel language for the PvD and split-horizon lookups",
      "url": "https://github.com/ietf-wg-add/draft-ietf-add-split-horizon-authority/pull/3",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-08T14:32:11Z",
      "updatedAt": "2022-06-14T16:30:33Z",
      "baseRepository": "ietf-wg-add/draft-ietf-add-split-horizon-authority",
      "baseRefName": "main",
      "baseRefOid": "b53b5e0740f227a1f5de908481e5975059c241c6",
      "headRepository": "ietf-wg-add/draft-ietf-add-split-horizon-authority",
      "headRefName": "bemasc-authentication",
      "headRefOid": "567166548d4d8699092164659eff0ed65416dae7",
      "closedAt": "2022-06-14T16:30:30Z",
      "mergedAt": "2022-06-14T16:30:30Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "cae90d301cfcd7654e32e99054c7dfb8563e0c72"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOHbyYm847mpC6",
          "commit": {
            "abbreviatedOid": "5671665"
          },
          "author": "danwing",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-08T15:31:49Z",
          "updatedAt": "2022-06-08T15:31:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHbyYm847pi0V",
          "commit": {
            "abbreviatedOid": "5671665"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-09T05:42:00Z",
          "updatedAt": "2022-06-09T05:42:00Z",
          "comments": []
        }
      ]
    }
  ]
}